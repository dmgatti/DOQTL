useDynLib(DOQTL, .registration = TRUE, .fixes = "C_")

import( annotate, 
        annotationTools,
        biomaRt, 
        Biobase,
        BiocGenerics,
        BSgenome.Mmusculus.UCSC.mm10,
        corpcor,
        doParallel,
        foreach,
        fpc,
        GenomicRanges,
        hwriter,
        IRanges,
        iterators,
        QTLRel,
        regress,
        rhdf5,
        Rsamtools,
        RUnit,
        VariantAnnotation,
        XML )

importFrom(mclust, Mclust, mclustBIC, priorControl)
importFrom("grDevices", "colorRampPalette", "dev.off", "gray", "grey",
             "png", "rgb")
importFrom("graphics", "abline", "axis", "barplot", "box", "layout",
             "legend", "lines", "mtext", "par", "plot", "points", "rect",
             "strheight", "strwidth", "text", "title")
importFrom("stats", "aggregate", "approx", "as.dendrogram", "as.dist",
             "hclust", "lm", "pchisq", "predict", "princomp", "qnorm",
             "rexp", "rnorm", "runif")
importFrom("utils", "read.delim", "write.csv", "write.table")
  
export("add.missing.F1s",
       "add.slash",
       "addLog",
       "addLogVector",
       "add.sig.thr",
	    "assoc.map",
	    "assoc.map.perms",
	    "assoc.plot",
	    "batch.normalize",
	    "bayesint",
       "create.Rdata.files", 
       "calc.genoprob", 
       "calc.genoprob.alleles",
       "calc.genoprob.intensity",
	    "categorize.variants",
	    "cc.trans.probs",
       "check.do.coat.color",
	    "chr.skeletons",
	    "cluster.strains",
	    "coefplot",
	    "colSumsLog",
       "condense.model.probs",
       "condense.sanger.snps",
	    "convert.allele.calls",
	    "convert.genotypes",
	    "convert.genes.to.GRanges",
	    "convert.pos.to.GRanges",
	    "convert.variants.to.GRanges",
	    "convert.variants.to.numeric",
	    "create.genotype.states",
	    "create.html.page",
	   "create.Rdata.files",
	   "do2sanger",
	   "do.trans.probs",
	   "dof1.trans.probs",
	   "estimate.cluster.params",
       "extract.raw.data",
	   "fast.qtlrel",
	   "fill.in.snps",
       "filter.geno.probs",
       "filter.samples",
	   "find.overlapping.genes",
	   "founder.F1.intensity.plot",
	   "gene.plot",
	   "get.chr.lengths",
	   "get.diplotype2haplotype.matrix",
	   "get.do.states",
      "get.genotype",
      "get.haplogroup",
      "get.machine.precision",
      "get.max.geno",
      "get.mgi.features",
      "get.num.auto",
      "get.pattern.variants",
      "get.pgw",
      "get.sig.thr",
      "get.snp.patterns",
      "get.strains",
      "get.variants",
      "get.vcf.strains",
      "genoprobs2hapblocks",
      "genotype.by.sample.barplot",
      "genotype.by.snp.barplot",
      "haploprobs2hapblocks",
      "html.report",
      "impute.genotypes",
      "intensity.mean.covar.plot",
      "interpolate.markers",
      "kinship.probs",
      "matrixeqtl.snps",
      "normalize.batches",
      "permutations.qtl.LRS",
      "prsmth.plot",
      "pxg.plot",
      "qtl.LRS",
	   "qtl.qtlrel",
      "qtl.heatmap", 
      "qtl.simulate",
	   "quantilenorm",
      "rankZ",
      "scanone",
      "scanone.assoc",
	   "scanone.eqtl",
      "scanone.perm",
	   "sdp.plot",
      "sex.predict",
	   "snp.plot",
      "summarize.genotype.transitions",
      "summarize.by.samples",
      "summarize.by.snps",
	   "variant.plot",
      "write.founder.genomes", 
	   "write.genoprob.plots",
      "write.unc.hap.file")

S3method(coef, doqtl)
S3method(plot, doqtl)
S3method(plot, genoprobs)
S3method(plot, scanone.assoc)

